/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var OAE = require('oae-util/lib/oae');
var OaeUtil = require('oae-util/lib/util');

var Publication = require('oae-publications/lib/model').Publication;
var PublicationsAPI = require('oae-publications');

/*!
 * Get a publication profile
 */
var getPublication = function(req, res) {
    PublicationsAPI.getPublication(req.ctx, req.params.publicationId, function(err, publication) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, publication);
    });
};
OAE.tenantRouter.on('get', '/api/publications/:publicationId', getPublication);

/*!
 * Get all the publications for a user who has been tagged as an author
 */
var getPublicationsByAuthor = function(req, res) {
    var limit = OaeUtil.getNumberParam(req.query.limit, 10, 1, 25);
    PublicationsAPI.getPublicationsForUser(req.ctx, req.params.userId, req.query.start, limit, function(err, publications, nextToken) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'results': publications, 'nextToken': nextToken});
    });
};
OAE.tenantRouter.on('get', '/api/publications/library/:userId', getPublicationsByAuthor);

/*!
 * Get all the publications for a user who created them
 */
var getPublicationsByCreator = function(req, res) {
    var limit = OaeUtil.getNumberParam(req.query.limit, 10, 1, 15);
    PublicationsAPI.getPublicationsByCreator(req.ctx, req.params.userId, req.query.start, limit, function(err, publications, nextToken) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'results': publications, 'nextToken': nextToken});
    });
};
OAE.tenantRouter.on('get', '/api/publications/created/:userId', getPublicationsByCreator);

/*!
 * Link an OAE user to a publication
 */
var linkPublication = function(req, res) {
    PublicationsAPI.linkPublicationToUser(req.ctx, req.params.publicationId, req.body.authorName, req.body.userId, function(err, result) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'result': result});
    });
};
OAE.tenantRouter.on('post', '/api/publications/:publicationId/link', linkPublication);

/*!
 * Update a publication
 */
var updatePublication = function(req, res) {
    if (req.body.publication) {
        var underEmbargo = req.body.publication.underEmbargo;
        if (!_.isBoolean(underEmbargo)) {
            req.body.publication.underEmbargo = underEmbargo === 'true' || underEmbargo === 'false' ? eval(underEmbargo) : underEmbargo;
        }
    }

    PublicationsAPI.updatePublication(req.ctx, req.params.publicationId, req.body, function(err, publication, result) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, {'publication': publication, 'result': result});
    });
};
OAE.tenantRouter.on('post', '/api/publications/:publicationId', updatePublication);

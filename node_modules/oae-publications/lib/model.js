/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * A publication model
 *
 * @param  {String}         id                              The OAE identifier of the publication
 * @param  {String}         tenantAlias                     The tenant where the publication was created in
 * @param  {String}         [createdBy]                     The ID of the user that created the publication. (Optional, not used in Symplectic)
 * @param  {String}         [linkedContentId]               The ID of the linked content item. (Optional, not used in Symplectic)
 * @param  {String}         displayName                     The title or display name for this publication
 * @param  {String}         publicationType                 The format of the publication. (See `PublicationConstants.publicationTypes`).
 * @param  {Number}         [date]                          The date when the publication was published (Optional, only required for Symplectic)
 * @param  {String}         [thumbnailUri]                  The url of the thumbnail. (Optional, only available when using Symplectic)
 * @param  {String[]}       authors                         A collection of authors. (e.g. ['John Doe', 'u:cam:f1Ede36Fb9', 'Jane Doe', 'u:gt:f1Ede36Fb9'])
 * @param  {String}         [publisher]                     Although the name is slightly ambiguous, this field is intended for Journal Names, Book publishers... (Optional, when using Symplectic)
 * @param  {Object}         [extra]                         Object containing extra values
 * @param  {String}         [extra.openAccessType]          The open access type (e.g. green, gold). (Optional, only used in Symplectic)
 * @param  {String}         [extra.journalName]             The name of the journal the article was published in. (Optional, not used in Symplectic)
 * @param  {Number}         [extra.issueNumber]             The issue number of the journal the article was published in. (Optional, only used in Symplectic)
 * @param  {Number}         [extra.pageBegin]               The page number of the magazine where the article starts. (Optional, only used in Symplectic)
 * @param  {Number}         [extra.pageEnd]                 The page number of the magazine where the article ends. (Optional, only used in Symplectic)
 * @param  {Number}         [extra.embargoDate]             The embargo date of the article. (Optional, not used in Symplectic)
 * @param  {Boolean}        [extra.underEmbargo]            Whether or not the publication is under embargo (Optional, nog used in Symplectic)
 * @param  {Number}         [extra.acceptanceDate]          The acceptance date of the article. (Optional, not used in Symplectic)
 * @param  {String[]}       [extra.funders]                 A collection of funders. (e.g. ['RCUK', 'Wellcome Trust']). (Optinional, not used in Symplectic)
 * @param  {String}         [extra.institution]             The author's institution (e.g. University of Cambridge). (Optional, nog used in Symplectic)
 * @param  {String}         [extra.department]              The affiliated department (e.g. Department of Classics). (Optional, nog used in Symplectic)
 * @param  {String}         [extra.contactEmail]            The email address that will be used to contact the responsable person. (Optional, not used in Symplectic)
 * @param  {String}         [extra.useCambridgeAddendum]    Whether of not the Cambridge Addendum is attached to the publication ("true"|"false"). (Optional, not used in Symplectic)
 * @param  {String}         [extra.comments]                Additional comments. (Optional, not used in Symplectic)
 * @return {Publication}                                    Object representing the created publication
 */
var Publication = module.exports.Publication = function(id, tenantAlias, createdBy, linkedContentId, displayName, publicationType, date, thumbnailUri, authors, publisher, extra) {
    var that = {};
    extra = extra || {};

    that.id = id;
    that.tenantAlias = tenantAlias;
    that.createdBy = createdBy;
    that.linkedContentId = linkedContentId;
    that.displayName = displayName;
    that.publicationType = publicationType;
    that.date = date;
    that.thumbnailUri = thumbnailUri;
    that.authors = authors;
    that.publisher = publisher;
    that.openAccessType = extra.openAccessType;

    that.journalName = extra.journalName;
    that.issueNumber = extra.issueNumber;
    that.pageBegin = extra.pageBegin;
    that.pageEnd = extra.pageEnd;
    that.underEmbargo = extra.underEmbargo;
    that.embargoDate = extra.embargoDate;
    that.acceptanceDate = extra.acceptanceDate;

    that.funders = extra.funders;

    that.institution = extra.institution;
    that.department = extra.department;
    that.contactEmail = extra.contactEmail;
    that.useCambridgeAddendum = extra.useCambridgeAddendum;

    that.comments = extra.comments;

    if (id) {
        var hash = id.split(':');
        that.profilePath = '/publications/' + hash[1] + '/' + hash[2];
    }

    return that;
};

/**
 * An ingested publication model
 *
 * @param  {String}                 authorName      The name of the publication author
 * @param  {String[]}               sourceIds       Collection of source ID's
 * @param  {Publication}            publication     Object representing a publication
 * @return {IngesterPublication}                    Object representing an ingested publication
 */
var IngesterPublication = module.exports.IngesterPublication = function(authorName, sourceIds, publication) {
    var that = {};
    that.authorName = authorName;
    that.sourceIds = sourceIds;
    that.publication = publication;
    return that;
};
